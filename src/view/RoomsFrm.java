/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.ImageIcon;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.border.EmptyBorder;

/**
 *
 * @author phamn
 */
public class RoomsFrm extends javax.swing.JPanel {

    /**
     * Creates new form BookRoomFrm
     */
    public RoomsFrm() {
        initComponents();
        setLayout(new BorderLayout());

        JPanel container = new JPanel(new GridLayout(0, 1));
        this.setBackground(new Color(54,33,89));
        HeaderComponent headerComponent = new HeaderComponent();
        container.add(headerComponent);
//for (int i = 0; i < 6; i++) {
//    JPanel floorPanel = new JPanel(new FlowLayout(FlowLayout.LEFT,5,50));
//    floorPanel.add(new FloorComponent());
//    floorPanel.setBorder(new EmptyBorder(0, 0,-500, 0));
//    container.add(floorPanel);
    JPanel rowPanel = new JPanel(new FlowLayout(FlowLayout.LEFT,5,0)); // Sắp xếp component theo hàng ngang
    for (int j = 0; j < 20; j++) {
        JPanel cardPanel = new JPanel(new FlowLayout(FlowLayout.LEFT,5,0));
        CardRoomComponent cardRoomComponent = new CardRoomComponent(
                "P101","Đơn",""
                ,"",new Color(102,255,102));
        cardPanel.add(cardRoomComponent);
        rowPanel.add(cardPanel);
        if (rowPanel.getComponentCount()==4) {
                container.add(rowPanel);
                rowPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        }
       cardPanel.addMouseListener(new PopupMenuMouseListener(cardPanel));
    }
    
    container.add(rowPanel);
JScrollPane scrollPane = new JScrollPane(container);
add(scrollPane, BorderLayout.CENTER);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(0, 689));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
private class PopupMenuMouseListener extends MouseAdapter {
        private JPanel cardPanel;
        public PopupMenuMouseListener(JPanel cardPanel) {
            this.cardPanel = cardPanel;
        }
        
        
        @Override
        public void mouseClicked(MouseEvent e) {
            if (e.isPopupTrigger()) {
                JPopupMenu popupMenu = new JPopupMenu();
                JMenuItem bookItem = new JMenuItem("Đặt phòng");               
                JMenuItem payItem = new JMenuItem("Thanh toán");

                bookItem.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        cardPanel.removeAll();
                        cardPanel.add(new CardRoomComponent("P101","Đơn","Khách hàng: Lan"
                ,"Gía: 100 VND/Ngày",new Color(255,51,51)));
                        cardPanel.revalidate();
                        cardPanel.repaint();
                    }
                });
                payItem.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        cardPanel.removeAll();
                        cardPanel.add(new CardRoomComponent("P101","Đơn",""
                ,"",new Color(255,255,0)));
                        cardPanel.revalidate();
                        cardPanel.repaint();
                    }
                });
                popupMenu.add(bookItem);
                popupMenu.add(payItem);
                popupMenu.show(cardPanel, e.getX(), e.getY());
            }
        }

        @Override
        public void mousePressed(MouseEvent e) {
            if (e.isPopupTrigger()) {
                mouseClicked(e);
            }
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            if (e.isPopupTrigger()) {
                mouseClicked(e);
            }
        }
    }
}
